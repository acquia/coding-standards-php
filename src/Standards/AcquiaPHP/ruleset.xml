<?xml version="1.0" encoding="UTF-8"?>

<!-- https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-Ruleset -->
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="../../../vendor/squizlabs/php_codesniffer/phpcs.xsd"
         name="AcquiaPHP"
>

  <description>Acquia's PHP coding standards.</description>

  <!-- The Acquia PHP standard is PSR-12 modified to be compatible with Drupal standards -->
  <rule ref="PSR12">
    <exclude name="Generic.WhiteSpace.ScopeIndent"/>
    <exclude name="Generic.PHP.LowerCaseConstant"/>
    <exclude name="PSR2.Classes.ClassDeclaration"/>
    <exclude name="PSR2.Methods.FunctionCallSignature"/>
    <exclude name="Squiz.Functions.FunctionDeclaration"/>
    <exclude name="Squiz.Functions.MultiLineFunctionDeclaration"/>
  </rule>

  <rule ref="PEAR.Functions.FunctionCallSignature">
    <properties>
      <property name="indent" value="2"/>
    </properties>
  </rule>

  <!-- Drupal sniffs -->
  <rule ref="Drupal.Classes.UnusedUseStatement"/>
  <rule ref="Drupal.Commenting.InlineComment"/>
  <rule ref="Drupal.WhiteSpace.ScopeIndent"/>

  <!-- Generic sniffs -->
  <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
  <rule ref="Generic.Formatting.SpaceAfterCast"/>
  <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie">
    <properties>
      <property name="checkClosures" value="true"/>
    </properties>
  </rule>
  <rule ref="Generic.NamingConventions.ConstructorName"/>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
  <rule ref="Generic.PHP.DeprecatedFunctions"/>
  <rule ref="Generic.PHP.UpperCaseConstant"/>

  <!-- Internal sniffs -->
  <rule ref="Internal.NoCodeFound">
    <!-- No PHP code in *.md, *.txt, or *.yml -->
    <exclude-pattern>*.(md|txt|yml)</exclude-pattern>
  </rule>

  <!-- MySource sniffs -->
  <rule ref="MySource.Debug.DebugCode"/>

  <!-- PEAR sniffs -->
  <rule ref="PEAR.Files.IncludingFile"/>
  <!-- Disable some error messages that we do not want. -->
  <rule ref="PEAR.Files.IncludingFile.UseIncludeOnce">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseInclude">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseRequireOnce">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseRequire">
    <severity>0</severity>
  </rule>

  <!-- PSR-12 sniffs -->
  <rule ref="PSR12.ControlStructures.ControlStructureSpacing">
    <properties>
      <property name="indent" value="2"/>
    </properties>
  </rule>

  <!-- PHP Compatibility sniffs -->
  <!-- The lowest version of PHP supported by both Drupal and Acquia Cloud.
    @see https://www.drupal.org/docs/8/system-requirements/php-requirements
    @see https://docs.acquia.com/acquia-cloud/arch/tech-platform/
    For instructions on overriding this value in your project,
    @see https://github.com/acquia/coding-standards-php/pull/37 -->
  <config name="testVersion" value="7.4-"/>
  <rule ref="PHPCompatibility">
    <exclude name="PHPCompatibility.Extensions.RemovedExtensions.famRemoved"/>
  </rule>

  <!-- SlevomatCodingStandard sniffs -->
  <rule ref="SlevomatCodingStandard.Arrays.AlphabeticallySortedByKeys"/>
  <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
  <rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement"/>
  <rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace"/>
  <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
  <rule ref="SlevomatCodingStandard.Classes.RequireConstructorPropertyPromotion"/>
  <rule ref="SlevomatCodingStandard.Commenting.DeprecatedAnnotationDeclaration"/>
  <rule ref="SlevomatCodingStandard.Commenting.DisallowCommentAfterCode"/>
  <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing"/>
  <rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
  <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
    <properties>
      <property name="forbiddenAnnotations" type="array" value="@author,@created,@version,@package,@copyright,@license,@throws"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments">
    <properties>
      <property name="forbiddenCommentPatterns" type="array" value="/Class .*/"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration"/>
  <rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment"/>
  <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment"/>
  <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
  <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
    <properties>
      <property name="linesCountBeforeDeclare" value="1"/>
      <property name="linesCountAfterDeclare" value="1"/>
      <property name="spacesCountAroundEqualsSign" value="0"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
    <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification"/>
  </rule>
  <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint"/>
  <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint"/>
  <!-- Superglobals are superbad. See linked issue for discussion.
  @see https://github.com/acquia/coding-standards-php/issues/49 -->
  <rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable"/>

  <!-- Squiz sniffs -->
  <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
  <rule ref="Squiz.Arrays.ArrayDeclaration">
    <exclude name="Squiz.Arrays.ArrayDeclaration.NoKeySpecified"/>
    <exclude name="Squiz.Arrays.ArrayDeclaration.KeySpecified"/>
  </rule>
  <!-- Disable some error messages that we do not want. -->
  <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoComma">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NotLowerCase">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNoNewline">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration" />
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterBrace">
    <severity>0</severity>
  </rule>
  <!-- Standard yet to be finalized on this (https://www.drupal.org/node/1539712). -->
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.Indent">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.CloseBracketLine">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
  <rule ref="Squiz.Strings.ConcatenationSpacing">
    <properties>
      <property name="spacing" value="1"/>
      <property name="ignoreNewlines" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionSpacing">
    <properties>
      <property name="spacing" value="1"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

</ruleset>
